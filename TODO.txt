OK - optimize memory usage, keep only the last N events in memory (else would have to poll less often)
- make parsing easier; separate operator and operands by newline?
- better score calculation rules
	- create round module to count the score incrementally (will be embedded in participant)
	- take challenge points into consideration
	- use the points of the highest hit below the lowest miss
	- don't poll harder challenges when an easier challenge fails
- show score accumulation history
	- save score for each tick as [timestamp score]
	- calculate total score from the history
	- print the history as text
	- visualize the history as graph (find a JS graph library)
- challenges: lorem ipsum: trim dot and comma
- more challenges
- balance the challenge points, perhaps 1 2 3 5 8 13 etc.
